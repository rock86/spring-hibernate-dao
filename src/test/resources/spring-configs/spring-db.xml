<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:custom="http://www.onceself.com/custom/tags/db"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.onceself.com/custom/tags/db
	http://www.onceself.com/custom/tags/db/custom-db.xsd">

	<custom:default-entity-dao-scan id="defaultEntityDaoScan"
		base-package="com.custom.domain" />

	<context:component-scan base-package="com.custom" />
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="targetDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置连接池的初始值 -->
		<property name="initialSize" value="1" />
		<!-- 连接池的最大值 -->
		<!-- <property name="maxActive" value="500"/> -->
		<!-- 最大空闲时，当经过一个高峰之后，连接池可以将一些用不到的连接释放，一直减少到maxIdle为止 -->
		<!-- <property name="maxIdle" value="2"/> -->
		<!-- 当最小空闲时，当连接少于minIdle时会自动去申请一些连接 -->
		<property name="timeBetweenEvictionRunsMillis" value="20000" />
		<property name="minEvictableIdleTimeMillis" value="28000" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="20" />
		<property name="maxWait" value="1000" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource" ref="targetDataSource" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.custom.domain</value>
			</list>
		</property>
		<property name="mappingLocations" value="classpath*:sqlmap/**/*.xml" />
	</bean>

	<bean id="customHibernateDaoSupport"
		class="com.custom.spring.hibernate.dao.support.CustomHibernateDaoSupport">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 连接事务的注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- <bean id="genericDao" class="com.amour.spring.hibernate.dao.impl.GenericDaoImpl"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->
</beans>